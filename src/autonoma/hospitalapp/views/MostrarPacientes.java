/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package autonoma.hospitalapp.views;

import autonoma.hospitalapp.exceptions.PacienteNoEncontradoException;
import autonoma.hospitalapp.models.Hospital;
import autonoma.hospitalapp.models.Paciente;
import autonoma.hospitalapp.models.SistemaCentral;
import java.awt.Color;
import java.awt.Frame;
import java.util.ArrayList;
import javax.swing.DefaultCellEditor;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Maria Paz Puerta
 */
public class MostrarPacientes extends javax.swing.JDialog {
    private ArrayList<Paciente> pacientes;
    private SistemaCentral sistema;
    private DefaultTableModel modeloTabla;
    private VentanaPrincipal ventanaPrincipal;
    /**
     * Creates new form MostrarPacientes
     */
    public MostrarPacientes(java.awt.Frame parent, boolean modal, SistemaCentral sistema, VentanaPrincipal ventanaPrincipa) {
        super(parent, modal);
        initComponents();
        setSize(620, 700);
        setResizable(false);
        this.setLocationRelativeTo(null);
        
        try{ 
           this.setIconImage(new ImageIcon(getClass().getResource("/autonoma/HospitalApp/images/Hospital.png")).getImage());
        
        }catch(NullPointerException e){
            System.out.println("Imagen no encontrada");
            
        }
        this.sistema = sistema;
        this.sistema.getHospital().getPacientes();
        this.sistema = sistema;
        this.pacientes = sistema.getHospital().getPacientes();
        this.ventanaPrincipal = ventanaPrincipal;
        this.tablaPacientes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        this.tablaPacientes.setRowSelectionAllowed(true);
        this.tablaPacientes.setColumnSelectionAllowed(false);
        modeloTabla = new DefaultTableModel(new Object[]{"Nombre","Documento","Edad", "Correo", "Teléfono", "Estado"}, 0);
        tablaPacientes.setModel(modeloTabla);
        this.llenarTabla();
        tablaPacientes.setSelectionBackground(new Color(198, 244, 214));
        tablaPacientes.setDefaultEditor(Object.class, new DefaultCellEditor(new JTextField()));
        tablaPacientes.setDefaultRenderer(Object.class, new DefaultTableCellRenderer());
        tablaPacientes.setDefaultEditor(Object.class, null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel10 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPacientes = new javax.swing.JTable();
        btnActualizar = new javax.swing.JToggleButton();
        btnEliminar = new javax.swing.JToggleButton();
        btnCancelar = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel10.setBackground(new java.awt.Color(205, 205, 250));

        jLabel4.setFont(new java.awt.Font("Serif", 1, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Lista de Pacientes");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel4)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        tablaPacientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Nombre", "Documento", "Edad", "Correo", "Télefono", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaPacientes);
        if (tablaPacientes.getColumnModel().getColumnCount() > 0) {
            tablaPacientes.getColumnModel().getColumn(0).setResizable(false);
            tablaPacientes.getColumnModel().getColumn(1).setResizable(false);
            tablaPacientes.getColumnModel().getColumn(2).setResizable(false);
            tablaPacientes.getColumnModel().getColumn(3).setResizable(false);
            tablaPacientes.getColumnModel().getColumn(4).setResizable(false);
            tablaPacientes.getColumnModel().getColumn(5).setResizable(false);
        }

        btnActualizar.setBackground(new java.awt.Color(51, 153, 255));
        btnActualizar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnActualizar.setForeground(new java.awt.Color(255, 255, 255));
        btnActualizar.setText("Actualizar ");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(255, 0, 0));
        btnEliminar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnCancelar.setBackground(new java.awt.Color(0, 153, 153));
        btnCancelar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnActualizar, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnCancelar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnEliminar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(117, 117, 117))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(btnActualizar)
                        .addGap(102, 102, 102)
                        .addComponent(btnEliminar)
                        .addGap(111, 111, 111)
                        .addComponent(btnCancelar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(69, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        int fila = this.tablaPacientes.getSelectedRow();
    
        if (fila >= 0) {
            Paciente paciente = this.pacientes.get(fila);
            ActualizarPaciente ventanaActualizar = new ActualizarPaciente((Frame) SwingUtilities.getWindowAncestor(this), true, sistema, paciente);
            ventanaActualizar.setVisible(true);
            llenarTabla();
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, seleccione el amigo que desea actualizar");
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int filaSeleccionada = tablaPacientes.getSelectedRow();
    
        if (filaSeleccionada == -1) {  
            JOptionPane.showMessageDialog(this, "Por favor, selecciona un paciente de la tabla.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }

        DefaultTableModel modelo = (DefaultTableModel) tablaPacientes.getModel();
    
        String nombre = (String) modelo.getValueAt(filaSeleccionada, 0);    

        int confirmacion = JOptionPane.showConfirmDialog(
        this, 
        "¿Seguro que deseas eliminar a " + nombre + "?", 
        "Confirmar eliminación", 
        JOptionPane.YES_NO_OPTION
         );

        if (confirmacion == JOptionPane.YES_OPTION) {  
            try {
                if (sistema.eliminarPaciente(nombre)) {
                    JOptionPane.showMessageDialog(this, "Paciente eliminado exitosamente.");
                     
                    actualizarTablaPacientes(); 
                    
                } else {
                    JOptionPane.showMessageDialog(this, "No se pudo eliminar el paciente.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (PacienteNoEncontradoException e) {
                JOptionPane.showMessageDialog(this, "El paciente no fue encontrado en la lista", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    public void llenarTabla() {
        DefaultTableModel modelDefault = new DefaultTableModel(new String[]{"Nombre","Documento","Edad", "Correo", "Teléfono", "Estado"}, this.pacientes.size());
        this.tablaPacientes.setModel (modelDefault);
    
        TableModel dataModel = tablaPacientes.getModel();
        for (int i=0; i< this.pacientes.size(); i++){
            Paciente paciente = this.pacientes.get(i);
        
            dataModel.setValueAt(paciente.getNombre(), i, 0); 
            dataModel.setValueAt(paciente.getDocumento(), i, 1); 
            dataModel.setValueAt(paciente.getEdad(), i, 2);
            dataModel.setValueAt(paciente.getCorreo(), i, 3);
            dataModel.setValueAt(paciente.getTelefono(), i, 4);
            dataModel.setValueAt(paciente.getEstadoPaciente(), i, 5);
        }
    }
    
    public void actualizarTablaPacientes() {
        DefaultTableModel modelo = (DefaultTableModel) tablaPacientes.getModel();
        modelo.setRowCount(0);  

        for (Paciente paciente : sistema.getHospital().getPacientes()) {
            Object[] fila = {
               
                paciente.getNombre(),
                paciente.getDocumento(),
                paciente.getEdad(),
                paciente.getCorreo(),
                paciente.getTelefono(),
                paciente.getEstadoPaciente()
            };
            modelo.addRow(fila);  
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnActualizar;
    private javax.swing.JToggleButton btnCancelar;
    private javax.swing.JToggleButton btnEliminar;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaPacientes;
    // End of variables declaration//GEN-END:variables
}
